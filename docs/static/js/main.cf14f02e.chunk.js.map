{"version":3,"sources":["Components/AddCategory.jsx","Components/GifGridItem.jsx","Components/GifGrid.jsx","customHooks/useFetch.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","item","placeholder","type","value","onChange","target","className","GifGridItem","img","url","title","style","width","height","src","alt","GifGrid","category","loadingState","setLoadingState","data","loading","state","setState","useEffect","a","fetch","response","json","gifs","map","id","images","downsized_medium","console","log","getGifs","useFetch","setTimeout","marginBottom","display","justifyContent","flexWrap","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMA0BeA,EAxBK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAEvC,OACE,uBAAMC,SAAU,SAACC,GACbA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAJtB,UAOE,uBACA,uBACEO,YAAY,2BACZC,KAAK,OACLC,MAAOV,EACPW,SAAU,SAACR,GAAD,OAAOF,EAAcE,EAAES,OAAOF,QACxCG,UAAU,qB,8BCAHC,EAhBK,SAAC,GAAW,IAAVC,EAAS,EAATA,IACZC,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,MACb,OACI,sBAAMC,MAAO,CAAEC,MAAM,QACrBC,OAAO,QADP,UAEI,qBACED,MAAM,QACNC,OAAO,QACPC,IAAKL,EACLM,IAAKL,IAEL,uBACA,4BAAIA,QCWDM,EArBC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACIzB,mBAAS,4CADb,mBAC3B0B,EAD2B,KACbC,EADa,KAEzBC,ECLQ,SAACH,GAAY,IAAD,EACCzB,mBAAS,CAC/B4B,KAAK,GACLC,SAAQ,IAHa,mBAClBC,EADkB,KACXC,EADW,KA2BzB,OAtBAC,qBAAU,YACO,uCAAG,oCAAAC,EAAA,sEAEJhB,EAFI,iDAE4CQ,EAF5C,8DAGaS,MAAMjB,GAHnB,cAGJkB,EAHI,gBAIaA,EAASC,OAJtB,gBAIFR,EAJE,EAIFA,KACFS,EAAOT,EAAKU,KAAI,SAACtB,GACrB,MAAO,CACLuB,GAAIvB,EAAIuB,GACRrB,MAAOF,EAAIE,MACXD,IAAKD,EAAIwB,OAAOC,iBAAiBxB,QAGrCc,EAAS,2BAAID,GAAL,IACNF,KAAKS,KAbG,kDAgBVK,QAAQC,IAAR,MAhBU,0DAAH,oDAmBXC,KACJ,CAACnB,IACIK,EDtBIe,CAASpB,GAAfG,KAIP,OAHAkB,YAAW,WACTnB,EAAgB,wDAA2BC,EAAKrB,aAChD,KAEA,sBAAKY,MAAO,CAAC4B,aAAa,QAASjC,UAAU,yCAA7C,UACE,4CAAc,4BAAIW,OAClB,uBACA,qBAAKN,MAAO,CAAC6B,QAAQ,OAAOC,eAAe,eAAeC,SAAS,QAAnE,SACCtB,EAAKrB,OAAS,EACXqB,EAAKU,KAAI,SAAC9B,GAAD,OACP,cAAC,EAAD,aAA6BQ,IAAKR,GAAUA,GAAzBA,EAAKS,QAE1BS,QEGKyB,EAlBM,WAAO,IAAD,EACWnD,mBAAS,IADpB,mBAClBoD,EADkB,KACNrD,EADM,KAOzB,OACE,gCACC,8CACC,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACCqD,EAAWd,KAAI,SAAC9B,GAAD,OACd,cAAC,EAAD,CAAoBiB,SAAUjB,GAAhBA,U,MCZtB6C,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.cf14f02e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  return (\r\n    <form onSubmit={(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(item=>[inputValue,...item]);\r\n            setInputValue(\"\")\r\n        }\r\n    }}>\r\n      <hr />\r\n      <input\r\n        placeholder=\"Ingresa una categorÃ­a\"\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={(e) => setInputValue(e.target.value)}\r\n        className=\"form-control\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\nAddCategory.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\nexport default AddCategory;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst GifGridItem = ({img}) => {\r\n  const { url, title } = img;\r\n  return (\r\n      <div  style={{ width:\"200px\",\r\n      height:\"auto\"}}>\r\n          <img \r\n            width=\"200px\"\r\n            height=\"200px\"\r\n            src={url}\r\n            alt={title}\r\n            />\r\n            <hr/>\r\n            <p>{title}</p>\r\n      </div>\r\n  );\r\n};\r\nexport default GifGridItem;\r\nGifGridItem.propTypes ={\r\n  img: PropTypes.object.isRequired,\r\n}\r\n","import React,{useState} from \"react\";\r\nimport {useFetch} from '../customHooks/useFetch'\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\nconst [loadingState, setLoadingState]=useState(<p>Cargando..</p>)\r\n  const {data}=useFetch(category);\r\n  setTimeout(()=>{\r\n    setLoadingState(<p>Resultados encontrados {data.length}</p>)\r\n  },2000)\r\n  return (\r\n    <div style={{marginBottom:\"10px\"}} className=\"animate__animated  animate__fadeInLeft\">\r\n      <h3>Category: <b>{category}</b></h3>\r\n      <hr/>\r\n      <div style={{display:\"flex\",justifyContent:\"space-around\",flexWrap:\"wrap\"}}>\r\n      {data.length > 0\r\n        ? data.map((item) => (\r\n            <GifGridItem  key={item.url} img={item} {...item}/>\r\n          ))\r\n        : loadingState\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default GifGrid;\r\n","import {useState,useEffect} from 'react'\r\nconst useFetch = (category)=>{\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n    useEffect(()=>{\r\n        const getGifs = async () => {\r\n            try {\r\n              const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=6&api_key=5mn85BCoPE39kpGLIQwwKcZb17RTp5Pc`;\r\n              const response = await fetch(url);\r\n              const { data } = await response.json();\r\n              const gifs = data.map((img) => {\r\n                return {\r\n                  id: img.id,\r\n                  title: img.title,\r\n                  url: img.images.downsized_medium.url,\r\n                };\r\n              });\r\n              setState({...state,\r\n                data:gifs\r\n            })\r\n            } catch (error) {\r\n              console.log(error);\r\n            }\r\n          };\r\n          getGifs();\r\n    },[category])\r\n    return state; \r\n}\r\nexport {useFetch}","import React, { useState } from \"react\";\r\nimport AddCategory from \"./Components/AddCategory\";\r\nimport GifGrid from \"./Components/GifGrid\";\r\n/* rafc */\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\r\n  /*  \"Alice in borderland\",\r\n       \"Berserk\",\r\n    \"Vinland saga\",\r\n    \"Beastars\", */\r\n  ]);\r\n  return (\r\n    <div>\r\n     <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <br/>\r\n      {categories.map((item) => (\r\n        <GifGrid key={item} category={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from './GifExpertApp'\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}